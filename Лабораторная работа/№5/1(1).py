import math

def calculate_combinations(n: int, k: int) -> int:
    """
    Метод для подсчета количества способов отбора k элементов из n.
    
    :param n: Общее количество кандидатов.
    :param k: Количество отбираемых кандидатов.
    :return: Количество способов отбора.
    """
    if k > n or n < 0 or k < 0:
        return 0  # Невозможно выбрать больше кандидатов, чем есть
    return math.factorial(n) // (math.factorial(k) * math.factorial(n - k))

# Определяем количество способов отбора для 8, 10 и 11 кандидатов
candidates = [8, 10, 11]
team_size = 5

for n in candidates:
    combinations = calculate_combinations(n, team_size)
    print(f"Количество способов отобрать {team_size} человека(ов) из {n} кандидатов: {combinations}")

#Объяснение:
    #Функция calculate_combinations:
        #Принимает два параметра: n (общее количество кандидатов) и k (количество отбираемых кандидатов).
        #Возвращает количество способов отбора, используя формулу сочетаний.
        #Проверяет, чтобы k не превышало n и чтобы оба параметра были неотрицательными.
    #Основной код:
        #Определяет список кандидатов (8, 10 и 11).
        #Для каждого значения n вычисляет количество способов отбора и выводит результат.
