''' 14. В заданной матрице элементы каждой строки расположить в порядке возрастания. Упорядочение элементов строки оформить в виде метода.'''


class MatrixSorter:
    def __init__(self, matrix):
        self.matrix = matrix

    def sort_rows(self):
        """Сортирует элементы каждой строки матрицы в порядке возрастания."""
        for i in range(len(self.matrix)):
            self.matrix[i] = self.sort_row(self.matrix[i])

    @staticmethod
    def sort_row(row):
        """Сортирует строку в порядке возрастания."""
        return sorted(row)

    def display_matrix(self):
        """Выводит матрицу на экран."""
        for row in self.matrix:
            print(row)

# Пример использования
if __name__ == "__main__":
    # Задаем матрицу
    matrix = [
        [3, 1, 2],
        [6, 5, 4],
        [9, 8, 7]
    ]

    sorter = MatrixSorter(matrix)
    print("Исходная матрица:")
    sorter.display_matrix()

    sorter.sort_rows()
    print("\nМатрица после сортировки строк:")
    sorter.display_matrix()



#Объяснение:
    #Класс MatrixSorter: Этот класс принимает матрицу в качестве параметра и содержит методы для сортировки строк и отображения матрицы.
    #Метод sort_rows: Сортирует каждую строку матрицы, вызывая метод sort_row.
    #Метод sort_row: Статический метод, который принимает строку и возвращает её отсортированную версию.
    #Метод display_matrix: Выводит матрицу на экран.
#Входные параметры:
    #matrix: двумерный список (матрица), который будет отсортирован.
#Возвращаемое значение:
    #Метод sort_row возвращает отсортированную строку. Метод sort_rows изменяет матрицу на месте, не возвращая значения.
