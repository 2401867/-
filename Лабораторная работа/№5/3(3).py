''' 3. Вычислить сумму элементов с нечетными индексами заданного массива, в котором предварительно производится попарная перестановка соседних элементов, начиная либо с первого (если значение первого элемента больше среднего арифметического элементов массива), либо с последнего элемента (в противном случае). Для нахождения суммы элементов с нечетными индексами использовать метод, для перестановки элементов массива - делегат.'''


def swap_elements(arr, start_from_first):
    if start_from_first:
        for i in range(0, len(arr) - 1, 2):
            arr[i], arr[i + 1] = arr[i + 1], arr[i]
    else:
        for i in range(len(arr) - 1, 0, -2):
            arr[i], arr[i - 1] = arr[i - 1], arr[i]

def sum_odd_indexed(arr):
    return sum(arr[i] for i in range(1, len(arr), 2))

def main():
    # Пример массива
    arr = [1, 2, 3, 4, 5, 6, 7, 8]
    
    # Вычисляем среднее арифметическое
    average = sum(arr) / len(arr)
    
    # Определяем, с какого конца начинать перестановку
    start_from_first = arr[0] > average
    
    # Перестановка элементов
    swap_elements(arr, start_from_first)
    
    # Вычисляем сумму элементов с нечетными индексами
    result = sum_odd_indexed(arr)
    
    print("Сумма элементов с нечетными индексами:", result)

# Проверка кода с переменными True и False
if __name__ == "__main__":
    main()
